/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.oop.project.applet;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.oop.project.connect.DatabaseConnect;
import org.oop.project.entity.Post;
import org.oop.project.entity.Answer;
import org.oop.project.entity.Account;

/**
 *
 * @author Axinto
 */
public class PostView extends javax.swing.JFrame {
    private Account user;
    private Post post;
    private Connection connect = null;
    
    
    /**
     * Creates new form Post
     */
    
    public PostView(){
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        try {
            setUser();
        } catch (SQLException ex) {
            Logger.getLogger(PostView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public PostView(String title) throws SQLException {
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setPost(title);
        setUser();
    }
    
    public void setUser()throws SQLException{
        String query;
        ResultSet result=null;
        Statement statement = null;
        PreparedStatement ps = null;
    
        query = "SELECT * FROM account WHERE username=\'"+Login.userName.getText().toString()+"\'";
        connect = new DatabaseConnect().getConnection();
        statement = connect.createStatement();
        result = statement.executeQuery(query);
        String answerText="";

        if(result.next()){
            user=new Account(result.getInt("id"),result.getString("username"),result.getString("password"),result.getString("firstName"),result.getString("lastName"),result.getString("middleName"),result.getString("type"));
            
        }
    }
    
    public void setPost(String title) throws SQLException{
        //ArrayList<Post> posts = new ArrayList<>();
        post = new Post();
        String query,query2;
        ResultSet result=null,result2 = null;
        Statement statement = null;
        PreparedStatement ps = null;
    
        query = "SELECT * FROM post WHERE title=\'"+title+"\'";
        connect = new DatabaseConnect().getConnection();
        statement = connect.createStatement();
        result = statement.executeQuery(query);

        if(result.next()){
            post = new Post(result.getInt("id"),result.getString("title"),result.getString("body"),result.getDate("dateCreated"),result.getDate("dateUploaded"),result.getInt("votes"),result.getString("tag"));
            query2 = "SELECT answer.id,answer.body,answer.votes,answer.dateAccepted,answer.dateAnswered,account.username FROM answer INNER JOIN post ON answer.post_id=post.id INNER JOIN account ON answer.acc_id=account.id WHERE post.id="+post.getId();
            statement = connect.createStatement();
            result2 = statement.executeQuery(query2);
            ArrayList<Answer> answers=new ArrayList<Answer>();
            
            while(result2.next()){
                Answer answer=new Answer(result.getInt("id"),result2.getString("body"),result2.getInt("votes"),result2.getDate("dateAccepted"),result2.getDate("dateAnswered"));
                answers.add(answer);
                 }
            post.setAnswers(answers);
        }
        labelTitle.setText(post.getTitle());
        textAreaBody.setText(post.getBody());
        showAnswers();
    }
    
    public void showAnswers(){
        List<Answer> answers=post.getAnswers();
        String answerText="";
        for(int i=0;i<answers.size();i++){
            answerText+="\n\n"+answers.get(i).getBody()+"\n"+answers.get(i).getDateAnswered();
        }
        textAreaAnswer.setText(answerText);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaBody = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaAnswer = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnAnswer = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaSubmit = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTitle.setText("jLabel1");

        textAreaBody.setEditable(false);
        textAreaBody.setColumns(20);
        textAreaBody.setRows(5);
        jScrollPane1.setViewportView(textAreaBody);

        textAreaAnswer.setEditable(false);
        textAreaAnswer.setColumns(20);
        textAreaAnswer.setRows(5);
        jScrollPane2.setViewportView(textAreaAnswer);

        jLabel1.setText("Answers:");

        btnAnswer.setText("ANSWER");
        btnAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnswerActionPerformed(evt);
            }
        });

        textAreaSubmit.setColumns(20);
        textAreaSubmit.setRows(5);
        jScrollPane3.setViewportView(textAreaSubmit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTitle)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnAnswer)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnswer)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnswerActionPerformed
        // TODO add your handling code here:
        System.out.println(""+textAreaSubmit.getText().toString());
        Answer answer=new Answer();
        answer.setBody(textAreaSubmit.getText().toString());
        answer.setVotes(0);
        try {
            if(textAreaSubmit.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Answer Field is empty.");
            }else{
                addAnswer(answer);
                textAreaSubmit.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PostView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnswerActionPerformed

    public void addAnswer(Answer answer) throws SQLException{
        String query = "INSERT INTO answer (body,votes,acc_id,post_id)"
                + "VALUES (?,?,?,?)";
        ResultSet result=null;
        Statement statement = null;
        PreparedStatement ps = null;
        ps = connect.prepareStatement(query);
        ps.setString(1,answer.getBody());
        ps.setInt(2,answer.getVotes());
        ps.setInt(3,user.getId());
        ps.setInt(4, post.getId());
        ps.execute();
        setPost(post.getTitle());
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PostView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PostView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PostView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PostView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PostView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnswer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTextArea textAreaAnswer;
    private javax.swing.JTextArea textAreaBody;
    private javax.swing.JTextArea textAreaSubmit;
    // End of variables declaration//GEN-END:variables
}
